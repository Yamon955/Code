/*  

https://www.acwing.com/blog/content/1740/  --->差分


虚拟源点
假想一个虚拟源点，从这个虚拟源点向原图A中每一个点连一条长度为0的边，形成新图B.图A中有负环 等价于 图B中有负环. 
dist[i]表示所有点到虚拟源点的最短路，如果图中存在负环，则存在 dist[i]=-INF。省去了将所有真实结点入队的操作。
源点需要满足的条件：从源点出发，一定可以走到所有的边（不一定要走到所有的点，某个点走不到表示该点孤立，对应变量无限制，可任意取值）.

差分约束：
对于一个约束条件：Xi<=Xj+c
可以转换为：dist[i]<=dist[j]+c------>可以求每个Xi最大值(跑最短路)  ( 建立边(j--->i)=c )
           dist[j]>=dist[i]-c------>可以求每个Xj最小值(跑最长路)  ( 建立边(i--->j)=-c )


对于条件：dist[i]<=dist[j]+c
（1）当图中没有负环时，运行完最短路算法一定都满足此表达式。
    因为如果存在dist[i]>dist[j]+c ，则一定可以更新i到原点的最短路。与“运行完最短路算法”矛盾。
（2）若存在负环，则不等式组一定矛盾。即：不等式组无解 <-> 存在负环(最短路)/存在正环(最长路)

计算：
若要计算Xi的最小值，则需要求“最长路”。
若要计算Xi的最大值，则需要求“最短路”。


最小值计算：-->洛谷P3275
若要计算Xi的最小值，则需要求“最长路”。
将所有题目中的约束条件转化成 dist[j]>=dist[i]-c的形式，
并建立从i到j，边权为-c的边。
dist数组初始化为-INF.

最大值计算：---->洛谷P5960
若要计算Xi的最大值，则需要求“最短路”。
将所有题目中的约束条件转化成 dist[i]<=dist[j]+c的形式，
并建立从j到i，边权为c的边。
dist数组初始化为+INF.
方法：在计算时一般会创建一个超级源点0，建立该源点到其他所有点的边权为 0 的单向边，然后求该源点到其他点的最短路即可


注意事项：
入队、出队时，一定要注意修改vis数组，表征是否在队列中。
⚫ 判负环，dist初始值不重要。--->POJ3259
⚫ 求具体最大/最小值，初始值很重要
*/
