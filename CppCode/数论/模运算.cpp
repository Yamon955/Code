#include<iostream>
#include<cstdio>
using namespace std;
/*
模运算：
        (a+b)%p = (a%p + b%p)%p
        (a-b)%p = (a%p - b%p)%p
        (a*b)%p = (a%p * b%p)%p
        a^b % p = ((a%p)^b)%p
        没有除法，没有除法，没有除法！！！！
        为此引入了---逆元
        逆元：
            如果 ax 恒等于 1 mod p ,则称a关于模p的乘法逆元为 x;
            一个数有逆元的充分必要条件是 gcd(a,p) = 1 (最大公约数为1)，此时逆元唯一存在
            逆元的含义：模f意义下，1个数 a 如果有逆元，那么除以 a 相当于乘以 x;--->以此将除法转化为乘法进行模运算
        
        证明：假设求(A / B) % 9973,A很大，只需输出 a = A % 9973 即可;(规定gcd(B,9973) = 1 )
                设 B 的逆元为 C
                那么(A / B) % 9973 = (A * C) % 9973
                原因：B * C % 9973 = 1
                    所以：(A * 1 / B) % 9973 =(A * B * C / B) % 9973 = (A * C) % 9973
*/
int main()
{
    return 0;
}